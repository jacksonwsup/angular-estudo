{"ast":null,"code":"var _class;\nimport { PedidoModel } from \"../model/pedido.model\";\nimport { PedidoItemModel } from \"../model/pedidoitem.model\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PedidoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.pedido = new PedidoModel();\n    this.baseUrl = 'http://localhost:8081';\n  }\n  adicionarItem(produto) {\n    const item = this.pedido.itens.find(item => item.produto.id === produto.id);\n    if (item) {\n      item.quantidade++;\n    } else {\n      this.pedido.itens.push(new PedidoItemModel(produto, 1));\n    }\n    this.pedido.total += Number(produto.preco);\n    console.log({\n      pedido: this.pedido\n    });\n    console.log({\n      total: this.pedido.total\n    });\n  }\n  removerItem(produto) {\n    const item = this.pedido.itens.find(item => item.produto.id === produto.id);\n    if (item) {\n      item.quantidade--;\n      this.pedido.total -= produto.preco;\n      if (item.quantidade === 0) {\n        this.pedido.itens.splice(this.pedido.itens.indexOf(item), 1);\n      }\n    }\n    console.log(this.pedido);\n    console.log(this.pedido.total);\n  }\n  enviarPedido() {\n    console.log(\"Enviando para o backend\", {\n      pedido: this.pedido\n    });\n    if (!this.pedido.itens.length) {\n      return new Observable(observer => {\n        observer.error({\n          message: 'O pedido deve ter pelo menos um item.'\n        });\n      });\n    }\n    const url = `${this.baseUrl}/pedidos`;\n    const pedido = {\n      itens: this.pedido.itens.map(item => {\n        return {\n          produto: item.produto.id,\n          quantidade: item.quantidade\n        };\n      })\n    };\n    const headers = new HttpHeaders({\n      \"Content-type\": \"application/json\",\n      \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphY2tzb25AZ21haWwuY29tIiwicGFzc3dvcmQiOiJmNzMyZGZkYmQwYWVkNjI3MjdmOTU4Y2NjY2E5ZWMzYTVjYjEzZWRhIiwiaWF0IjoxNjk2MDUwMTM3LCJleHAiOjE2OTYwNTM3Mzd9.Gw-Wzd4cXDMGbJb4LJDtcAySccx41_DmOhLUFvxMkHY\"\n    });\n    const options = {\n      headers: headers\n    };\n    const response = this.httpClient.post(url, pedido, options);\n    this.pedido = new PedidoModel();\n    return response;\n  }\n}\n_class = PedidoService;\n_class.ɵfac = function PedidoService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["PedidoModel","PedidoItemModel","HttpHeaders","Observable","PedidoService","constructor","httpClient","pedido","baseUrl","adicionarItem","produto","item","itens","find","id","quantidade","push","total","Number","preco","console","log","removerItem","splice","indexOf","enviarPedido","length","observer","error","message","url","map","headers","options","response","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\jackson\\Documents\\2023\\Estudo-Angular\\angular-estudo\\src\\app\\services\\pedido.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { PedidoModel } from \"../model/pedido.model\";\r\nimport { PedidoItemModel } from \"../model/pedidoitem.model\";\r\nimport { ProdutoModel } from \"../model/produto.model\";\r\nimport { HttpClient , HttpHeaders} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class PedidoService {\r\n\r\n  public pedido: PedidoModel = new PedidoModel();\r\n  private baseUrl = 'http://localhost:8081';\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n\r\n  adicionarItem(produto: ProdutoModel): void {\r\n    const item: PedidoItemModel | undefined = this.pedido.itens.find(item => item.produto.id === produto.id);\r\n    if (item) {\r\n      item.quantidade++;\r\n    } else {\r\n      this.pedido.itens.push(new PedidoItemModel(produto, 1));\r\n    }\r\n    this.pedido.total += Number(produto.preco);\r\n    console.log({ pedido: this.pedido });\r\n    console.log({ total: this.pedido.total });\r\n  }\r\n\r\n  removerItem(produto: ProdutoModel): void {\r\n    const item: PedidoItemModel | undefined = this.pedido.itens.find(item => item.produto.id === produto.id);\r\n    if (item) {\r\n      item.quantidade--;\r\n      this.pedido.total -= produto.preco;\r\n      if (item.quantidade === 0) {\r\n        this.pedido.itens.splice(this.pedido.itens.indexOf(item), 1);\r\n      }\r\n    }\r\n    console.log(this.pedido);\r\n    console.log(this.pedido.total);\r\n  }\r\n\r\n  enviarPedido(): Observable<any> {\r\n\r\n    console.log(\"Enviando para o backend\", { pedido: this.pedido });\r\n\r\n\r\n    if (!this.pedido.itens.length) {\r\n      return new Observable<any>(observer => {\r\n        observer.error({ message: 'O pedido deve ter pelo menos um item.' });\r\n      });\r\n    }\r\n\r\n    const url = `${this.baseUrl}/pedidos`;\r\n\r\n    const pedido = {\r\n      itens: this.pedido.itens.map(item => {\r\n        return {\r\n          produto: item.produto.id,\r\n          quantidade: item.quantidade\r\n        }\r\n      })\r\n    }\r\n\r\n    const headers = new HttpHeaders({\r\n      \"Content-type\": \"application/json\",\r\n      \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphY2tzb25AZ21haWwuY29tIiwicGFzc3dvcmQiOiJmNzMyZGZkYmQwYWVkNjI3MjdmOTU4Y2NjY2E5ZWMzYTVjYjEzZWRhIiwiaWF0IjoxNjk2MDUwMTM3LCJleHAiOjE2OTYwNTM3Mzd9.Gw-Wzd4cXDMGbJb4LJDtcAySccx41_DmOhLUFvxMkHY\",\r\n    });\r\n\r\n    const options = { headers : headers };\r\n\r\n    const response = this.httpClient.post(url, pedido, options);\r\n    this.pedido = new PedidoModel();\r\n\r\n    return response;\r\n  }\r\n\r\n}\r\n"],"mappings":";AACA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,eAAe,QAAQ,2BAA2B;AAE3D,SAAsBC,WAAW,QAAO,sBAAsB;AAC9D,SAASC,UAAU,QAAQ,MAAM;;;AAGjC,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJvB,KAAAC,MAAM,GAAgB,IAAIP,WAAW,EAAE;IACtC,KAAAQ,OAAO,GAAG,uBAAuB;EAGK;EAI9CC,aAAaA,CAACC,OAAqB;IACjC,MAAMC,IAAI,GAAgC,IAAI,CAACJ,MAAM,CAACK,KAAK,CAACC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACD,OAAO,CAACI,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IACxG,IAAIH,IAAI,EAAE;MACRA,IAAI,CAACI,UAAU,EAAE;KAClB,MAAM;MACL,IAAI,CAACR,MAAM,CAACK,KAAK,CAACI,IAAI,CAAC,IAAIf,eAAe,CAACS,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEzD,IAAI,CAACH,MAAM,CAACU,KAAK,IAAIC,MAAM,CAACR,OAAO,CAACS,KAAK,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC;MAAEd,MAAM,EAAE,IAAI,CAACA;IAAM,CAAE,CAAC;IACpCa,OAAO,CAACC,GAAG,CAAC;MAAEJ,KAAK,EAAE,IAAI,CAACV,MAAM,CAACU;IAAK,CAAE,CAAC;EAC3C;EAEAK,WAAWA,CAACZ,OAAqB;IAC/B,MAAMC,IAAI,GAAgC,IAAI,CAACJ,MAAM,CAACK,KAAK,CAACC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACD,OAAO,CAACI,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IACxG,IAAIH,IAAI,EAAE;MACRA,IAAI,CAACI,UAAU,EAAE;MACjB,IAAI,CAACR,MAAM,CAACU,KAAK,IAAIP,OAAO,CAACS,KAAK;MAClC,IAAIR,IAAI,CAACI,UAAU,KAAK,CAAC,EAAE;QACzB,IAAI,CAACR,MAAM,CAACK,KAAK,CAACW,MAAM,CAAC,IAAI,CAAChB,MAAM,CAACK,KAAK,CAACY,OAAO,CAACb,IAAI,CAAC,EAAE,CAAC,CAAC;;;IAGhES,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,MAAM,CAAC;IACxBa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,MAAM,CAACU,KAAK,CAAC;EAChC;EAEAQ,YAAYA,CAAA;IAEVL,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;MAAEd,MAAM,EAAE,IAAI,CAACA;IAAM,CAAE,CAAC;IAG/D,IAAI,CAAC,IAAI,CAACA,MAAM,CAACK,KAAK,CAACc,MAAM,EAAE;MAC7B,OAAO,IAAIvB,UAAU,CAAMwB,QAAQ,IAAG;QACpCA,QAAQ,CAACC,KAAK,CAAC;UAAEC,OAAO,EAAE;QAAuC,CAAE,CAAC;MACtE,CAAC,CAAC;;IAGJ,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACtB,OAAO,UAAU;IAErC,MAAMD,MAAM,GAAG;MACbK,KAAK,EAAE,IAAI,CAACL,MAAM,CAACK,KAAK,CAACmB,GAAG,CAACpB,IAAI,IAAG;QAClC,OAAO;UACLD,OAAO,EAAEC,IAAI,CAACD,OAAO,CAACI,EAAE;UACxBC,UAAU,EAAEJ,IAAI,CAACI;SAClB;MACH,CAAC;KACF;IAED,MAAMiB,OAAO,GAAG,IAAI9B,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE;KAClB,CAAC;IAEF,MAAM+B,OAAO,GAAG;MAAED,OAAO,EAAGA;IAAO,CAAE;IAErC,MAAME,QAAQ,GAAG,IAAI,CAAC5B,UAAU,CAAC6B,IAAI,CAACL,GAAG,EAAEvB,MAAM,EAAE0B,OAAO,CAAC;IAC3D,IAAI,CAAC1B,MAAM,GAAG,IAAIP,WAAW,EAAE;IAE/B,OAAOkC,QAAQ;EACjB;;SApEW9B,aAAa;;mBAAbA,MAAa,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAbnC,MAAa;EAAAoC,OAAA,EAAbpC,MAAa,CAAAqC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}